<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shi.dao.IUserDao">

<!--    配置查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="com.shi.domain.User">
<!--        主键字段的对应-->
        <id property="userId" column="id"></id>
<!--        非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

<!--    查询所有用户-->
    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>

<!--    保存用户-->
    <insert id="saveUser" parameterType="com.shi.domain.User">
-- 配置插入操作之后,获取插入数据的id
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user (username,address,sex,birthday) values (#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>

<!--    更新用户-->
    <update id="updateUser" parameterType="com.shi.domain.User">
        update user set username = #{userName},address = #{userAddress},sex = #{userSex},birthday = #{userBirthday} where id = #{userId};
    </update>

<!--    删除用户的操作-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
                            <!-- 当方法中只有一个参数时,占位符可以任意命名-->
        delete from user where id = #{userId};
    </delete>

<!--    根据id查询用户-->
    <select id="findById" parameterType="java.lang.Integer" resultMap="userMap">
        select * from user where id = #{id};
    </select>

<!--    根据名称模糊查询用户-->
    <select id="findByUsername" parameterType="java.lang.String" resultMap="userMap">
        select * from user where username like #{username};
--         select * from user where username like '%${value}%';  两种都可以
    </select>

<!--    获取用户的总记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

<!--    根据QueryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.shi.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.username};
    </select>
</mapper>