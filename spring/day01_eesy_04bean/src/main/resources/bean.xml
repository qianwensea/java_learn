<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    把对象的创建来交给spring来管理-->
<!--    spring对Bean的管理细节
            1.创建bean的三种方式
            2.bean对象的作用范围
            3.bean对象的生命周期
-->
<!--    1.创建bean的三种方式-->
<!--        第一种方式: 使用默认构造函数创建.
                在spring的配置文件中使用bean标签,配以id和class属性之后,且没有其他属性和标签时,
                采用的就是默认构造函数创建bean对象,此时如果类中没有默认构造函数,则对象无法创建
           <bean id="accountService" class="com.shi.service.impl.AccountServiceImpl"></bean>
        -->

<!--       第二种方式: 使用普通工厂中的方法创建对象(使用某个类中的方法创建对象,并存入spring容器中)
    <bean id="instanceFactory" class="com.shi.factory.InstanceFactory"></bean>
    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>
 -->

<!--    第三中方式: 使用静态工厂中的静态方法创建对象(使用某个类中的静态方法创建对象,并存入spring容器)
    <bean id="accountService" class="com.shi.factory.StaticInstanceFactory" factory-method="getAccountService"></bean>

-->

<!--    2.bean的作用范围调整
            bean标签scope属性:
            作用:指定bean的作用范围
            取值:
                singleton 单例的(默认值)
                prototype 多例的
                request   作用与web应用的请求范围
                session   作用与web应用的会话范围
                global-session  作用与集群环境的会话范围(全局会话范围),当不是集群环境时相当与session
    <bean id="accountService" class="com.shi.service.impl.AccountServiceImpl" scope="prototype"></bean>

-->
<!--      3.bean对象的生命周期
                单例对象:
                    出生:当容器创建时对象出生
                    活着:当容器还在,一直活着
                    死亡:容器销毁,对象消亡
                    总结: 单例对象的生命对象与容器相同
                多例对象
                    出生:当容我们使用对象时,spring为我们创建
                    活着:对象只要使用过程中就一直活着
                    死亡:当对象长时间不用且没有别的对象引用时,由Java的垃圾回收器回收
-->
    <bean id="accountService" class="com.shi.service.impl.AccountServiceImpl" scope="prototype" init-method="init" destroy-method="destroy"></bean>
</beans>